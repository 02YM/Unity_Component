# Transform
- 오브젝트의 위치, 회전, 크기를 나타내는 컴포넌트다.
-- 오브젝트를 생성하면 기본으로 붙어있는 기본 컴포넌트다.
--- Transform myTransform하고 변수 선언을 해준 후 myTransfom.Rotate() 이런식으로 쓰는 방법도 있긴하지만
--- Transform 컴포넌트는 모든 오브젝트들이 디폴트로 갖고 있는 컴포넌트이기 때문에 그냥 변수 없이 transform 소문자
--- transform으로 바로 사용하는게 가능하다. => transform.Rotate(); 이런식으로.
---- 

# 변수/프로퍼티
- 1. position
-- transform.position = new Vector3(0,1,0);
-- 오브젝트의 월드 좌표에서 위치를 가져오거나 설정함.
-- 이동할 때 제일 자주 씀

- 2. localPosition
-- transform.localPosition = new Vector3(0,1,0);
-- 부모 기준의 로컬 좌표
-- 자식 오브젝트 위치 조정할 때 사용됨

- 3. rotation
-- transform.rotation = Quaternion.Euler(0,90,0);
-- 오브젝트의 월드 회전값
-- 회전할 때 Quaternion으로 다루게 됨.

- 4. localRotation
-- transform.localRotation = Quaternion.Euler(0, 90, 0);
-- 부모 기준의 회전값.

- 5. eulerAngle
-- transform.eulerAngles = new Vector3(0, 90 ,0);
-- 회전을 각도로 표현할 떄 편리함
-- 하지만 내부족으로 Quaternion으로 변환됨

- 6. localScale
-- transform.localScale = new Vector3(1,2,1);
-- 오브젝트의 크기
-- 오브젝트를 키우거나 줄일 때 사용

- 7. parent
-- transform.parent = otherTransform;
-- 부모 오브젝트 설정할 때,
-- SetParent() 메서드도 자주 씀.

- 8. forward, right, up
-- Vector3 front = transform.forward;
-- Vector3 right = transform.right;
-- Vector3 up = transform.up;
-- 오브젝트의 방향 벡터

- 9. TrnasformDirection
-- 로컬 공간에서 월드공간으로 변환합니다.


# 함수/메서드
- 1. Translate(Vectot3)
-- 오브젝트를 이동시킴
-- Space.World 나 Space.Self로 방향 기준 설정 가능

- 2. Rotate(Vector3)
-- 오브젝트를 회전 시킴
-- Space.World 나 Space.Self 기준 회전 설정 가능

- 3. LookAt(Vector3)
-- 오브젝트가 타겟 오브젝트를 바라보게 함
-- 특히 적 AI나 총구 방향 제어에 유용

- 4. TransformPoint(Vector3)
-- 로컬 좌표를 월드 좌표로 변환
-- 자식 오브젝트 위치 계산할 때 유용

- 5. InverseTransformPoint(Vector3)
-- 월드 좌표를 로컬 좌표로 변환
-- 오브젝트 기준 위치를 계산할 때 사용

- 6. SetParent(Vector3, bool)
-- 부모를 설정함
-- worldPositionStays를 false로 설정하면 현재 위치가 부모 기준으로 재조정됨

- 7. DetachChildren()
- 자식 오브젝트들을 부모에서 모두 분리함